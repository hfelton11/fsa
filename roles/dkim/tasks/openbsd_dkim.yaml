---
- name: "obsd : dkim : install dkim filter"
  community.general.openbsd_pkg:
    name:
      - opensmtpd-filter-dkimsign--
    state: present
  when: not mail.listen | selectattr('filter', 'eq', 'spam') | length > 0

- name: "obsd : dkim : configure rspamd"
  ansible.builtin.template:
    src: dkim_signing.conf.j2
    dest: /etc/rspamd/local.d/dkim_signing.conf
    mode: 0600
  notify:
    - rspamd_syntax
    - rspamd_restart
  when: mail.listen | selectattr('filter', 'eq', 'spam') | length > 0

- name: "obsd : dkim : create keyfolder"
  ansible.builtin.file:
    path: /etc/mail/dkim/
    state: directory
    owner: _rspamd
    group: _dkimsign
    mode: 0770

- name: "obsd : dkim : generate privkeys"
  ansible.builtin.shell: if [ ! -f /etc/mail/dkim/{{ item }}.key ]; then openssl genrsa -out /etc/mail/dkim/{{ item }}.key
    2048 >/dev/null 2>&1 && echo changed; fi
  register: dkimkeys
  changed_when: dkimkeys.stdout == "changed"
  loop: "{{ mail.domains }}"
  notify:
    - rspamd_syntax
    - rspamd_restart

- name: "obsd : dkim : generate pubkeys"
  ansible.builtin.shell: if [ ! -f /etc/mail/dkim/{{ item }}_pub.txt ]; then openssl rsa -in /etc/mail/dkim/{{ item }}.key
    -pubout -out /etc/mail/dkim/{{ item }}_pub.txt >/dev/null 2>&1 && echo changed; fi
  register: dkimpubkeys
  changed_when: dkimpubkeys.stdout == "changed"
  loop: "{{ mail.domains }}"
  notify:
    - dkim_newkeys_echo

- name: "obsd : dkim : build DNS records" # noqa risky-shell-pipe
  ansible.builtin.shell: 'for i in $(ls /etc/mail/dkim/*_pub.txt); do key=$(cat $i | grep -v KEY | tr -d "\n"); name=$(echo
    $i | cut -d _ -f1 | rev | cut -d / -f1 | rev); echo -n "--------------------------------\nDNS RECORDS REQUIRED FOR $name:\n-
    MX:          $name - 10 {{ ansible_fqdn }}\n- SPF (TXT):   $name - \"v=spf1 mx -all\"\n- DKIM (TXT):  {{ ansible_hostname
    }}._domainkey.$name - \"v=DKIM1;k=rsa;p=$key;\"\n- DMARC (TXT): _dmarc.$name - \"v=DMARC1;p=reject;rua=mailto:dmarc@$name;sp=reject;aspf=s;adkim=s;ri=2592000\"\nWARN:
    Not explicitly listed, but also required, is the A-Record with {{ ansible_fqdn }} that has to match the server IP.\n\n";
    done'
  register: dkim_pubs_out
  when: mail.setup | default(true)
  notify:
    - dkim_newkeys_echo
