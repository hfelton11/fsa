###
### THIS IS A DRIVER PLAY & ROLE FOR AUTOMATED CODE TESTS WITH MOLECULE
### NOT SOMETHING TO RUN MANUALLY, AND IGNORED BY FSA AUTO-DETECTION
###
---
# This playbook abuses molecule's idempotence feature to check for no-changes-by-default
# If the scenario name is "default", it will only run on presence of the checkfile created in the first pass
# This way the role to test is only ran once, on the second pass, when the file already exists
# Both create.yaml and destroy.yaml remove the file to ensure a clean slate
- hosts: all
  gather_facts: false
  tasks:
    - name: read environment, set interpreter
      set_fact:
        moleculefile: "{{ lookup('env', 'MOLECULE_FILE') }}"

    - name: compute scenario name
      shell: echo {{ moleculefile }} | rev | cut -d '/' -f2 | rev
      changed_when: false
      register: scenarioname
      delegate_to: localhost

    - name: compute role name
      shell: echo {{ moleculefile }} | rev | cut -d '/' -f3 | rev
      changed_when: false
      register: rolename
      when: scenarioname.stdout == 'default'
      delegate_to: localhost

    - name: compute unique id
      shell: echo {{ moleculefile }} | rev | cut -d '/' -f 2,3 | rev | tr '/' '-' | md5sum | awk '{print $1}' | cut -c1-8
      register: runid
      changed_when: false
      when: scenarioname.stdout == 'default'
      delegate_to: localhost

    - name: look for checkfile
      stat:
        path: /tmp/{{ runid.stdout }}
      register: checkfile
      delegate_to: localhost
      when: scenarioname.stdout == 'default'

    - name: handle the checkfile
      file:
        path: /tmp/{{ runid.stdout }}
        state: touch
      changed_when: false
      delegate_to: localhost
      when: scenarioname.stdout == 'default'

    - name: debug output
      debug:
        msg: scenarioname {{ scenarioname.stdout }} ; rolename {{ rolename.stdout }} ; runid {{ runid.stdout }}

    - name: gather facts
      ansible.builtin.setup:

    - name: run "{{ rolename.stdout }}"
      include_role:
        name: "{{ rolename.stdout }}"
      when: (checkfile.stat.exists and scenarioname.stdout == 'default') or not scenarioname.stdout == 'default'

    - name: notify user
      debug:
        msg: "WARN: {{ rolename.stdout }} has not been applied on the first pass because the scenario name is `default`"
      when: not checkfile.stat.exists and scenarioname.stdout == 'default'
