---
- name: "obsd : httpd : determine if first run"
  service_facts:
  tags:
    - web
    - mail
    - httpd
    - relay
    - sites

# need to start the http with the main conf, but without the website confs
# for the generic LE catchall to work, for the LE hook to run, for the certs to be there for httpd restart
- name: "obsd : httpd : template provisional config"
  template:
    src: httpd.LE.conf.j2
    dest: /etc/httpd.conf
    mode: 0600
  when: ansible_facts.services.httpd.state != 'running'
  tags:
    - web
    - mail
    - httpd
    - relay
    - sites

- name: "obsd : httpd : start the service"
  service:
    name: httpd
    state: started
  when: ansible_facts.services.httpd.state != 'running'
  tags:
    - web
    - mail
    - httpd
    - relay
    - sites

- name: "obsd : httpd : template the main config"
  template:
    src: httpd.main.conf.j2
    dest: /etc/httpd.conf
    mode: 0600
  notify:
    - "httpd_syntax"
    - "httpd_restart"
  tags:
    - web
    - mail
    - httpd
    - relay
    - sites

- name: "obsd : httpd : template websites"
  template:
    src: httpd.sites.conf.j2
    dest: "/etc/httpd.{{ item.name }}.conf"
    mode: 0600
  loop: "{{ web.sites }}"
  notify:
    - "httpd_syntax"
    - "httpd_restart"
  when: web.sites is defined and item.root is defined
  tags:
    - web
    - httpd
    - sites

- name: "obsd : httpd : create webroots"
  file:
    path: "/var/www{{ item.root }}"
    state: directory
    owner: root
    group: daemon
  when: web.sites is defined and item.root is defined
  loop: "{{ web.sites }}"
  notify:
    - "httpd_syntax"
    - "httpd_restart"
  tags:
    - web
    - httpd
    - sites

- name: "obsd : httpd : setup authfile"
  shell: "echo {{ item.user }}:{{ item.pass }} | htpasswd -I /var/www/.auth && chmod 0640 /var/www/.auth"
  when: web.httpd.auth is defined
  changed_when: false
  loop: "{{ web.httpd.auth }}"
  tags:
    - web
    - httpd
    - auth

